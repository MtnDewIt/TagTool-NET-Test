using System;
using System.Collections.Frozen;
using System.Collections.Generic;
using TagTool.Common;
using TagTool.Tags;
using TagTool.Tags.Definitions.Gen1;

namespace TagTool.Cache.Gen1
{
    public class TagDefinitionsGen1 : TagDefinitions
    {
        public FrozenDictionary<TagGroup, Type> Gen1Types => Gen1Definitions.TagGroupToTypeLookup;
        private static readonly CachedDefinitions Gen1Definitions = GetCachedDefinitions(new Dictionary<TagGroup, Type>
        {
            { new TagGroupGen1("mode"), typeof(Model) },
            { new TagGroupGen1("mod2"), typeof(Gbxmodel) },
            { new TagGroupGen1("antr"), typeof(ModelAnimations) },
            { new TagGroupGen1("bitm"), typeof(Bitmap) },
            { new TagGroupGen1("colo"), typeof(ColorTable) },
            { new TagGroupGen1("str#"), typeof(StringList) },
            { new TagGroupGen1("ustr"), typeof(UnicodeStringList) },
            { new TagGroupGen1("font"), typeof(Font) },
            { new TagGroupGen1("bipd","unit","obje"), typeof(Biped) },
            { new TagGroupGen1("vehi","unit","obje"), typeof(Vehicle) },
            { new TagGroupGen1("scen","obje"), typeof(Scenery) },
            { new TagGroupGen1("phys"), typeof(Physics) },
            { new TagGroupGen1("cont"), typeof(Contrail) },
            { new TagGroupGen1("weap","item","obje"), typeof(Weapon) },
            { new TagGroupGen1("ligh"), typeof(Light) },
            { new TagGroupGen1("effe"), typeof(Effect) },
            { new TagGroupGen1("part"), typeof(Particle) },
            { new TagGroupGen1("matg"), typeof(Globals) },
            { new TagGroupGen1("snd!"), typeof(Sound) },
            { new TagGroupGen1("lsnd"), typeof(SoundLooping) },
            { new TagGroupGen1("eqip","item","obje"), typeof(Equipment) },
            { new TagGroupGen1("flag"), typeof(Flag) },
            { new TagGroupGen1("ant!"), typeof(Antenna) },
            { new TagGroupGen1("boom"), typeof(Spheroid) },
            { new TagGroupGen1("rain"), typeof(WeatherParticleSystem) },
            { new TagGroupGen1("glw!"), typeof(Glow) },
            { new TagGroupGen1("mgs2"), typeof(LightVolume) },
            { new TagGroupGen1("elec"), typeof(Lightning) },
            { new TagGroupGen1("trak"), typeof(CameraTrack) },
            { new TagGroupGen1("pctl"), typeof(ParticleSystem) },
            { new TagGroupGen1("ngpr"), typeof(PreferencesNetworkGame) },
            { new TagGroupGen1("proj","obje"), typeof(Projectile) },
            { new TagGroupGen1("coll"), typeof(ModelCollisionGeometry) },
            { new TagGroupGen1("mach","devi","obje"), typeof(DeviceMachine) },
            { new TagGroupGen1("ctrl","devi","obje"), typeof(DeviceControl) },
            { new TagGroupGen1("lifi","devi","obje"), typeof(DeviceLightFixture) },
            { new TagGroupGen1("pphy"), typeof(PointPhysics) },
            { new TagGroupGen1("sbsp"), typeof(ScenarioStructureBsp) },
            { new TagGroupGen1("scnr"), typeof(Scenario) },
            { new TagGroupGen1("senv","shdr"), typeof(ShaderEnvironment) },
            { new TagGroupGen1("soso","shdr"), typeof(ShaderModel) },
            { new TagGroupGen1("sotr","shdr"), typeof(ShaderTransparentGeneric) },
            { new TagGroupGen1("schi","shdr"), typeof(ShaderTransparentChicago) },
            { new TagGroupGen1("scex","shdr"), typeof(ShaderTransparentChicagoExtended) },
            { new TagGroupGen1("swat","shdr"), typeof(ShaderTransparentWater) },
            { new TagGroupGen1("sgla","shdr"), typeof(ShaderTransparentGlass) },
            { new TagGroupGen1("smet","shdr"), typeof(ShaderTransparentMeter) },
            { new TagGroupGen1("spla","shdr"), typeof(ShaderTransparentPlasma) },
            { new TagGroupGen1("actr"), typeof(Actor) },
            { new TagGroupGen1("actv"), typeof(ActorVariant) },
            { new TagGroupGen1("sky "), typeof(Sky) },
            { new TagGroupGen1("wind"), typeof(Wind) },
            { new TagGroupGen1("snde"), typeof(SoundEnvironment) },
            { new TagGroupGen1("lens"), typeof(LensFlare) },
            { new TagGroupGen1("fog "), typeof(Fog) },
            { new TagGroupGen1("plac","obje"), typeof(Placeholder) },
            { new TagGroupGen1("metr"), typeof(Meter) },
            { new TagGroupGen1("deca"), typeof(Decal) },
            { new TagGroupGen1("jpt!"), typeof(DamageEffect) },
            { new TagGroupGen1("udlg"), typeof(Dialogue) },
            { new TagGroupGen1("itmc"), typeof(ItemCollection) },
            { new TagGroupGen1("wphi"), typeof(WeaponHudInterface) },
            { new TagGroupGen1("grhi"), typeof(GrenadeHudInterface) },
            { new TagGroupGen1("unhi"), typeof(UnitHudInterface) },
            { new TagGroupGen1("hud#"), typeof(HudNumber) },
            { new TagGroupGen1("hudg"), typeof(HudGlobals) },
            { new TagGroupGen1("vcky"), typeof(VirtualKeyboard) },
            { new TagGroupGen1("mply"), typeof(MultiplayerScenarioDescription) },
            { new TagGroupGen1("dobc"), typeof(DetailObjectCollection) },
            { new TagGroupGen1("ssce","obje"), typeof(SoundScenery) },
            { new TagGroupGen1("hmt "), typeof(HudMessageText) },
            { new TagGroupGen1("DeLa"), typeof(UiWidgetDefinition) },
            { new TagGroupGen1("Soul"), typeof(UiWidgetCollection) },
            { new TagGroupGen1("cdmg"), typeof(ContinuousDamageEffect) },
            { new TagGroupGen1("foot"), typeof(MaterialEffects) },
            { new TagGroupGen1("garb","item","obje"), typeof(Garbage) },
            { new TagGroupGen1("tagc"), typeof(TagCollection) },
            { new TagGroupGen1("devc"), typeof(InputDeviceDefaults) },
        });
        public TagDefinitionsGen1() : base(Gen1Definitions) { }
    }
}
