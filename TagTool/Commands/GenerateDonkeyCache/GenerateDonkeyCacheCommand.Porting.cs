using System;
using TagTool.Cache;
using TagTool.Commands.Porting;
using TagTool.JSON.Parsers;
using TagTool.JSON;
using TagTool.Tags;
using HaloShaderGenerator.Globals;
using TagTool.Tags.Definitions;

namespace TagTool.Commands.GenerateDonkeyCache
{
    partial class GenerateDonkeyCacheCommand : Command
    {
        public void PortTagData()
        {
            InitializePortingContext();

            // These will get turned into JSON objects at some point
            // Gotta figure out how to inline the pagable resource data first
            haloOnline.PortTag($@"", $@"levels\shared\bitmaps\nature\water\water_ripples.bitmap");
            haloOnline.PortTag($@"", $@"levels\shared\bitmaps\nature\water\wave_foam.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\alpha_grey50.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\alpha_white.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\auto_exposure_weight.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\color_black.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\color_black_alpha_black.bitmap");
            h100.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\color_green.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\color_red.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\color_white.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\default_alpha_test.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\default_detail.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\default_dynamic_cube_map.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\default_environment_map.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\default_vector.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\dither_pattern.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\dither_pattern2.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\gray_50_percent.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\gray_50_percent_linear.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\monochrome_alpha_grid.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\random4_warp.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\reference_grids.bitmap");
            haloOnline.PortTag($@"", $@"shaders\default_bitmaps\bitmaps\sparklenoisemap.bitmap");

            // Along with the default bitmaps, this will get turned into its own tag list at some point

            TagParser.ParseFile($@"shaders\beam.render_method_definition");
            TagParser.ParseFile($@"shaders\beam_options\albedo_diffuse_only.render_method_option");
            TagParser.ParseFile($@"shaders\beam_options\albedo_palettized.render_method_option");
            TagParser.ParseFile($@"shaders\beam_options\albedo_palettized_plus_alpha.render_method_option");
            TagParser.ParseFile($@"shaders\beam_options\global_beam_options.render_method_option");
            TagParser.ParseFile($@"shaders\black.render_method_definition");
            TagParser.ParseFile($@"shaders\contrail.render_method_definition");
            TagParser.ParseFile($@"shaders\contrail_options\albedo_diffuse_only.render_method_option");
            TagParser.ParseFile($@"shaders\contrail_options\albedo_palettized.render_method_option");
            TagParser.ParseFile($@"shaders\contrail_options\albedo_palettized_plus_alpha.render_method_option");
            TagParser.ParseFile($@"shaders\contrail_options\global_contrail_options.render_method_option");
            TagParser.ParseFile($@"shaders\cortana.render_method_definition");
            TagParser.ParseFile($@"shaders\custom.render_method_definition");
            TagParser.ParseFile($@"shaders\custom_options\albedo_waterfall.render_method_option");
            TagParser.ParseFile($@"shaders\custom_options\alpha_test_multiply_map.render_method_option");
            TagParser.ParseFile($@"shaders\custom_options\material_custom_specular.render_method_option");
            TagParser.ParseFile($@"shaders\custom_options\window_room_map.render_method_option");
            TagParser.ParseFile($@"shaders\decal.render_method_definition");
            TagParser.ParseFile($@"shaders\decal_options\albedo_change_color.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\albedo_diffuse_only.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\albedo_diffuse_plus_alpha.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\albedo_diffuse_plus_alpha_mask.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\albedo_emblem_change_color.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\albedo_palettized.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\albedo_palettized_plus_alpha.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\albedo_palettized_plus_alpha_mask.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\albedo_vector_alpha.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\albedo_vector_alpha_drop_shadow.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\bump_mapping_standard.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\bump_mapping_standard_mask.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\global_decal_options.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\specular_modulate.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\tinting_fully_modulated.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\tinting_partially_modulated.render_method_option");
            TagParser.ParseFile($@"shaders\decal_options\tinting_unmodulated.render_method_option");
            TagParser.ParseFile($@"shaders\foliage.render_method_definition");
            TagParser.ParseFile($@"shaders\foliage_options\material_default.render_method_option");
            TagParser.ParseFile($@"shaders\halogram.render_method_definition");
            TagParser.ParseFile($@"shaders\light_volume.render_method_definition");
            TagParser.ParseFile($@"shaders\light_volume_options\albedo_circular.render_method_option");
            TagParser.ParseFile($@"shaders\light_volume_options\albedo_diffuse_only.render_method_option");
            TagParser.ParseFile($@"shaders\light_volume_options\global_light_volume.render_method_option");
            TagParser.ParseFile($@"shaders\particle.render_method_definition");
            TagParser.ParseFile($@"shaders\particle_options\albedo_diffuse_modulated.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\albedo_diffuse_only.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\albedo_diffuse_plus_billboard_alpha.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\albedo_diffuse_plus_sprite_alpha.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\albedo_palettized.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\albedo_palettized_glow.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\albedo_palettized_plasma.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\albedo_palettized_plus_billboard_alpha.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\albedo_palettized_plus_sprite_alpha.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\depth_fade_on.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\depth_fade_palette_shift.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\frame_blend_on.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\global_particle_options.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\self_illumination_constant_color.render_method_option");
            TagParser.ParseFile($@"shaders\particle_options\specialized_rendering_distortion.render_method_option");
            TagParser.ParseFile($@"shaders\screen.render_method_definition");
            TagParser.ParseFile($@"shaders\screen_options\base_single.render_method_option");
            TagParser.ParseFile($@"shaders\screen_options\blend.render_method_option");
            TagParser.ParseFile($@"shaders\screen_options\detail_a.render_method_option");
            TagParser.ParseFile($@"shaders\screen_options\detail_mask_a.render_method_option");
            TagParser.ParseFile($@"shaders\screen_options\global_screen_options.render_method_option");
            TagParser.ParseFile($@"shaders\screen_options\illum_palettized_plasma_change_color.render_method_option");
            TagParser.ParseFile($@"shaders\screen_options\overlay_tint_add_color.render_method_option");
            TagParser.ParseFile($@"shaders\screen_options\warp_simple.render_method_option");
            TagParser.ParseFile($@"shaders\shader.render_method_definition");
            TagParser.ParseFile($@"shaders\shader_options\albedo_chameleon.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_chameleon_albedo_masked.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_chameleon_masked.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_color_mask.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_color_mask_hard_light.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_constant.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_custom_cube.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_default.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_detail_blend.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_emblem.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_four_change_color.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_scrolling_cube.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_scrolling_cube_mask.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_scrolling_texture_uv.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_simple.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_texture_from_misc.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_three_detail_blend.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_two_change_color.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_two_change_color_anim_overlay.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_two_change_color_chameleon.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_two_change_color_tex_overlay.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_two_color.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_two_detail.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_two_detail_black_point.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\albedo_two_detail_overlay.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\alpha_test_off.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\alpha_test_on.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\bump_default.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\bump_detail.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\bump_detail_masked.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\bump_detail_plus_detail_masked.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\bump_detail_unorm.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\bump_off.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\cortana_albedo.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\cortana_screenspace.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\cortana_transparency.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\distort_on.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\edge_fade_simple.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\env_map_dynamic.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\env_map_from_flat_texture.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\env_map_per_pixel.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\glass_material.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\global_shader_options.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_3_channel.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_change_color.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_change_color_detail.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_detail.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_detail_world_space_four_cc.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_from_diffuse.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_holograms.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_meter.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_multilayer.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_multilayer_five_change_color.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_multilayer_four_change_color.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_palettized_depth_fade.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_palettized_plasma.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_plasma.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_plasma_wide_and_sharp_five_change_color.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_scope_blur.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_simple.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_simple_four_change_color.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\illum_times_diffuse.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_car_paint.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_cook_torrance_custom_cube_option.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_cook_torrance_from_albedo.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_cook_torrance_option.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_cook_torrance_option_reach.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_cook_torrance_pbr_maps_option.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_cook_torrance_rim_fresnel.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_cook_torrance_scrolling_cube.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_cook_torrance_scrolling_cube_mask.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_cook_torrance_two_color_spec_tint.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_diffuse_only.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_foliage.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_hair_option.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_organism_option.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_two_lobe_phong_option.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_two_lobe_phong_option_reach.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\material_two_lobe_phong_tint_map_option.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\misc_attr_scrolling_cube.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\misc_attr_scrolling_projected.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\overlay_additive.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\overlay_additive_detail.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\overlay_multiply_additive_detail.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\parallax_detail.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\parallax_simple.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\sfx_distort.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\single_lobe_phong.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\soft_fade.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\specular_mask_from_texture.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\warp_cortana_default.render_method_option");
            TagParser.ParseFile($@"shaders\shader_options\warp_from_texture.render_method_option");
            TagParser.ParseFile($@"shaders\terrain.render_method_definition");
            TagParser.ParseFile($@"shaders\terrain_options\default_blending.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_only_m_0.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_only_m_1.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_only_m_2.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_only_m_3.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_only_plus_sefl_illum_m_0.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_only_plus_sefl_illum_m_1.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_only_plus_sefl_illum_m_2.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_plus_specular_m_0.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_plus_specular_m_1.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_plus_specular_m_2.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_plus_specular_m_3.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_plus_specular_plus_heightmap_m_0.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_plus_specular_plus_heightmap_m_1.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_plus_specular_plus_self_illumm_0.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_plus_specular_plus_self_illumm_1.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_plus_specular_plus_self_illumm_2.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_plus_specular_plus_up_vector_plus_heightmap_m_0.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_plus_specular_plus_up_vector_plus_heightmap_m_1.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\diffuse_plus_two_detail_m_0.render_method_option");
            TagParser.ParseFile($@"shaders\terrain_options\dynamic_blending.render_method_option");
            TagParser.ParseFile($@"shaders\water.render_method_definition");
            TagParser.ParseFile($@"shaders\water_options\appearance_default.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\bankalpha_depth.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\bankalpha_from_shape_texture_alpha.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\bankalpha_paint.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\foam_auto.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\foam_both.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\foam_none.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\foam_paint.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\globalshape_depth.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\globalshape_paint.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\reach_compatibility_enabled.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\reflection_dynamic.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\reflection_static.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\reflection_static_ssr.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\refraction_dynamic.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\water_global.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\watercolor_pure.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\watercolor_texture.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\waveshape_bump.render_method_option");
            TagParser.ParseFile($@"shaders\water_options\waveshape_default.render_method_option");
            TagParser.ParseFile($@"shaders\zonly.render_method_definition");

            // There are still a lot of shader related issues that need to be worked out
            // The temporary solution is to just store static copies of MS23's bytecode for the problem shader types.

            //GenerateGlobalShader(CacheStream, ShaderType.Beam);
            TagParser.ParseFile($@"shaders\beam_shared_pixel_shaders.global_pixel_shader");
            TagParser.ParseFile($@"shaders\beam_shared_vertex_shaders.global_vertex_shader");

            GenerateGlobalShader(CacheStream, ShaderType.Black);

            //GenerateGlobalShader(CacheStream, ShaderType.Contrail);
            TagParser.ParseFile($@"shaders\contrail_shared_pixel_shaders.global_pixel_shader");
            TagParser.ParseFile($@"shaders\contrail_shared_vertex_shaders.global_vertex_shader");

            GenerateGlobalShader(CacheStream, ShaderType.Cortana);
            GenerateGlobalShader(CacheStream, ShaderType.Custom);
            GenerateGlobalShader(CacheStream, ShaderType.Decal);
            GenerateGlobalShader(CacheStream, ShaderType.Foliage, false);
            GenerateGlobalShader(CacheStream, ShaderType.Halogram);

            //GenerateGlobalShader(CacheStream, ShaderType.LightVolume);
            TagParser.ParseFile($@"shaders\light_volume_shared_pixel_shaders.global_pixel_shader");
            TagParser.ParseFile($@"shaders\light_volume_shared_vertex_shaders.global_vertex_shader");

            //GenerateGlobalShader(CacheStream, ShaderType.Particle);
            TagParser.ParseFile($@"shaders\particle_shared_pixel_shaders.global_pixel_shader");
            TagParser.ParseFile($@"shaders\particle_shared_vertex_shaders.global_vertex_shader");

            GenerateGlobalShader(CacheStream, ShaderType.Screen);
            GenerateGlobalShader(CacheStream, ShaderType.Shader);
            GenerateGlobalShader(CacheStream, ShaderType.Terrain);
            GenerateGlobalShader(CacheStream, ShaderType.Water, false);
            GenerateGlobalShader(CacheStream, ShaderType.ZOnly);

            GenerateTag<AiDialogueGlobals>($@"ai\ai_dialogue_globals");
            TagParser.ParseFile($@"ai\ai_dialogue_globals.ai_dialogue_globals");
            sandbox.PortTag($@"", $@"ai\assaulting.style");
            sandbox.PortTag($@"", $@"ai\bunkering.style");
            sandbox.PortTag($@"", $@"ai\normal.style");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\brittle\glass.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\energy\energy.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\hard\hard_metal_thick_cov_chopper_wheel.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\hard\hard_metal_thick_hum_scorpion_tread.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\hard\metal_solid.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\hard\metal_thick.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\hard\metal_thick_cov.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\hard\metal_thick_for_sentinel.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\hard\metal_thick_hum_hollow_huge.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\hard\metal_thick_hum_hollow_med.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\hard\metal_thin.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\hard\metal_thin_cov_elite.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\hard\metal_thin_hum_obj_rattly.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\hard\terrain_concrete.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\hard\terrain_stone.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\liquid\liquid.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\soft\soft_inorganic_cardboard.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\soft\soft_organic_cloth.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\soft\soft_organic_plant.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\soft\soft_organic_plant_bushy_dynamic.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\soft\soft_organic_plant_leafy_dynamic.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\soft\terrain_snow.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\tough\inorganic_plastic.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\tough\inorganic_rubber.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\tough\inorganic_rubber_hum_tire.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\tough\inorganic_rubber_hum_tire_mongoose.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\tough\organic_wood.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\tough\terrain_dirt.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\tough\tough_floodflesh.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\tough\tough_organic_wood_sapling_dynamic.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\materials\tough\tough_organic_wood_tree_dynamic.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\objects\havok\blitzcan.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\objects\havok\hubcap.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\objects\havok\soccer_ball.material_effects");
            sandbox.PortTag($@"", $@"fx\material_effects\objects\weapons\flag.material_effects");
            sandbox.PortTag($@"", $@"fx\scenery_fx\explosions\human_explosion_huge\human_explosion_huge.effect");
            sandbox.PortTag($@"", $@"fx\scenery_fx\havok\havok_collection.effect");
            sandbox.PortTag($@"", $@"fx\water\default_large.render_water_ripple");
            sandbox.PortTag($@"", $@"fx\water\default_medium.render_water_ripple");
            sandbox.PortTag($@"", $@"fx\water\default_small.render_water_ripple");
            sandbox.PortTag($@"", $@"globals\collision_damage\collision.damage_effect");
            sandbox.PortTag($@"", $@"globals\collision_damage\default.collision_damage");
            sandbox.PortTag($@"", $@"globals\collision_damage\landing_hard.damage_effect");
            sandbox.PortTag($@"", $@"globals\collision_damage\landing_soft.damage_effect");
            sandbox.PortTag($@"", $@"globals\damage_responses\default.damage_response_definition");
            sandbox.PortTag($@"", $@"globals\default.camera_fx_settings");
            sandbox.PortTag($@"", $@"globals\default.performance_throttles");
            sandbox.PortTag($@"", $@"globals\default_unit_camera_track.camera_track");
            sandbox.PortTag($@"", $@"globals\default_wind.wind");
            sandbox.PortTag($@"", $@"globals\distance.damage_effect");
            sandbox.PortTag($@"", $@"globals\effect_globals.effect_globals");
            sandbox.PortTag($@"", $@"globals\falling.damage_effect");
            sandbox.PortTag($@"", $@"globals\glass.breakable_surface");
            sandbox.PortTag($@"", $@"globals\glass_thick.breakable_surface");
            GenerateTag<ShieldImpact>($@"globals\global_shield_impact_settings");
            sandbox.PortTag($@"", $@"globals\hs_damage.damage_effect");
            GenerateTag<InputGlobals>($@"globals\input_globals");
            GenerateTag<ShieldImpact>($@"globals\elite_3p_shield_impact");
            GenerateTag<ShieldImpact>($@"globals\elite_fp_shield_impact");
            GenerateTag<ShieldImpact>($@"globals\masterchief_3p_shield_impact");
            GenerateTag<ShieldImpact>($@"globals\masterchief_fp_shield_impact");
            GenerateTag<ShieldImpact>($@"globals\overshield_3p_shield_impact");
            GenerateTag<ShieldImpact>($@"globals\overshield_fp_shield_impact");
            sandbox.PortTag($@"", $@"levels\shared\bitmaps\test_maps\cloud_1.bitmap");
            sandbox.PortTag($@"", $@"levels\shared\bitmaps\test_maps\cloud_2.bitmap");
            GenerateTag<RasterizerGlobals>($@"globals\rasterizer_globals");
            sandbox.PortTag($@"", $@"multiplayer\game_engine_settings.game_engine_settings_definition");
            sandbox.PortTag($@"", $@"multiplayer\global_multiplayer_messages.multilingual_unicode_string_list");
            sandbox.PortTag($@"", $@"multiplayer\hill\hill.bitmap");
            sandbox.PortTag($@"", $@"multiplayer\in_game_multiplayer_messages.multilingual_unicode_string_list");
            GenerateTag<MultiplayerGlobals>($@"multiplayer\multiplayer_globals");
            sandbox.PortTag($@"", $@"multiplayer\random_player_names.multilingual_unicode_string_list");
            sandbox.PortTag($@"", $@"multiplayer\sandbox\cursor_impact.effect");
            GenerateTag<SurvivalModeGlobals>($@"multiplayer\survival_mode_globals");
            sandbox.PortTag($@"", $@"multiplayer\team_names.multilingual_unicode_string_list");
            sandbox.PortTag($@"", $@"objects\characters\masterchief\fx\coop_teleport.effect");
            sandbox.PortTag($@"", $@"sound\weapons\equipment\tripmine\tripmine_explosion.sound");
            sandbox.PortTag($@"", $@"sound\weapons\equipment\tripmine\tripmine_lod_far.sound");
            sandbox.PortTag($@"", $@"objects\equipment\tripmine\fx\detonation.light");
            //sandbox.PortTag($@"", $@"multiplayer\vehicle_autoflip.effect");
            //sandbox.PortTag($@"", $@"multiplayer\safety_booster.effect");
            sandbox.PortTag($@"", $@"objects\cinematics\cinematic_anchor\cinematic_anchor.scenery");
            sandbox.PortTag($@"", $@"objects\multi\shaders\koth_shield.shader_halogram");
            sandbox.PortTag($@"", $@"objects\weapons\multiplayer\assault_bomb\damage_effects\bomb_explosion.damage_effect");
            sandbox.PortTag($@"", $@"rasterizer\active_camouflage_distortion.bitmap");
            sandbox.PortTag($@"", $@"rasterizer\cc0236.bitmap");
            sandbox.PortTag($@"", $@"rasterizer\c78d78.bitmap");
            sandbox.PortTag($@"", $@"rasterizer\dd0236.bitmap");
            sandbox.PortTag($@"", $@"rasterizer\shaders\simple.vertex_shader");
            sandbox.PortTag($@"", $@"rasterizer\shaders\simple.pixel_shader");
            GenerateExplicitShader(CacheStream, ExplicitShader.debug);
            GenerateExplicitShader(CacheStream, ExplicitShader.debug2d);
            GenerateExplicitShader(CacheStream, ExplicitShader.copy_surface);
            GenerateExplicitShader(CacheStream, ExplicitShader.spike_blur_vertical);
            GenerateExplicitShader(CacheStream, ExplicitShader.spike_blur_horizontal);
            GenerateExplicitShader(CacheStream, ExplicitShader.downsize_2x_to_bloom);
            GenerateExplicitShader(CacheStream, ExplicitShader.downsize_2x_target);
            GenerateExplicitShader(CacheStream, ExplicitShader.copy_rgbe_to_rgb);
            GenerateExplicitShader(CacheStream, ExplicitShader.update_persistence);
            GenerateExplicitShader(CacheStream, ExplicitShader.add_downsampled);
            GenerateExplicitShader(CacheStream, ExplicitShader.add);
            GenerateExplicitShader(CacheStream, ExplicitShader.blur_11_horizontal, false);
            GenerateExplicitShader(CacheStream, ExplicitShader.blur_11_vertical, false);
            GenerateExplicitShader(CacheStream, ExplicitShader.cubemap_phi_blur);
            GenerateExplicitShader(CacheStream, ExplicitShader.cubemap_theta_blur);
            GenerateExplicitShader(CacheStream, ExplicitShader.cubemap_clamp);
            GenerateExplicitShader(CacheStream, ExplicitShader.cubemap_divide);
            GenerateExplicitShader(CacheStream, ExplicitShader.write_depth);
            GenerateExplicitShader(CacheStream, ExplicitShader.final_composite);
            GenerateExplicitShader(CacheStream, ExplicitShader.sky_dome_simple);
            GenerateExplicitShader(CacheStream, ExplicitShader.transparent);
            GenerateExplicitShader(CacheStream, ExplicitShader.shield_meter);
            GenerateExplicitShader(CacheStream, ExplicitShader.legacy_meter);
            GenerateExplicitShader(CacheStream, ExplicitShader.overhead_map_geometry);
            GenerateExplicitShader(CacheStream, ExplicitShader.legacy_hud_bitmap);
            GenerateExplicitShader(CacheStream, ExplicitShader.blend3);
            GenerateExplicitShader(CacheStream, ExplicitShader.particle_update);
            GenerateExplicitShader(CacheStream, ExplicitShader.particle_spawn);
            GenerateExplicitShader(CacheStream, ExplicitShader.screenshot_combine, false);
            GenerateExplicitShader(CacheStream, ExplicitShader.downsample_2x2);
            GenerateExplicitShader(CacheStream, ExplicitShader.rotate_2d);
            GenerateExplicitShader(CacheStream, ExplicitShader.bspline_resample);
            GenerateExplicitShader(CacheStream, ExplicitShader.downsample_4x4_bloom_dof);
            GenerateExplicitShader(CacheStream, ExplicitShader.final_composite_dof);
            GenerateExplicitShader(CacheStream, ExplicitShader.kernel_5, false);
            GenerateExplicitShader(CacheStream, ExplicitShader.exposure_downsample);
            GenerateExplicitShader(CacheStream, ExplicitShader.yuv_to_rgb);
            GenerateExplicitShader(CacheStream, ExplicitShader.displacement);
            GenerateExplicitShader(CacheStream, ExplicitShader.screenshot_display);
            GenerateExplicitShader(CacheStream, ExplicitShader.downsample_4x4_block);
            GenerateExplicitShader(CacheStream, ExplicitShader.crop);
            GenerateExplicitShader(CacheStream, ExplicitShader.screenshot_combine_dof, false);
            GenerateExplicitShader(CacheStream, ExplicitShader.gamma_correct);
            GenerateExplicitShader(CacheStream, ExplicitShader.contrail_spawn);
            GenerateExplicitShader(CacheStream, ExplicitShader.contrail_update);
            GenerateExplicitShader(CacheStream, ExplicitShader.stencil_stipple);
            GenerateExplicitShader(CacheStream, ExplicitShader.lens_flare);
            GenerateExplicitShader(CacheStream, ExplicitShader.decorator_default);
            GenerateExplicitShader(CacheStream, ExplicitShader.downsample_4x4_block_bloom);
            GenerateExplicitShader(CacheStream, ExplicitShader.downsample_4x4_gaussian);
            GenerateExplicitShader(CacheStream, ExplicitShader.apply_color_matrix);
            GenerateExplicitShader(CacheStream, ExplicitShader.copy);
            GenerateExplicitShader(CacheStream, ExplicitShader.shadow_geometry);
            GenerateExplicitShader(CacheStream, ExplicitShader.shadow_apply);
            GenerateExplicitShader(CacheStream, ExplicitShader.gradient, false);
            GenerateExplicitShader(CacheStream, ExplicitShader.alpha_test_explicit);
            GenerateExplicitShader(CacheStream, ExplicitShader.patchy_fog, false);
            GenerateExplicitShader(CacheStream, ExplicitShader.light_volume_update);
            GenerateExplicitShader(CacheStream, ExplicitShader.water_ripple);
            GenerateExplicitShader(CacheStream, ExplicitShader.double_gradient, false);
            GenerateExplicitShader(CacheStream, ExplicitShader.sniper_scope);
            GenerateExplicitShader(CacheStream, ExplicitShader.shield_impact);
            GenerateExplicitShader(CacheStream, ExplicitShader.player_emblem_world);
            GenerateExplicitShader(CacheStream, ExplicitShader.player_emblem_screen);
            GenerateExplicitShader(CacheStream, ExplicitShader.implicit_hill);
            GenerateExplicitShader(CacheStream, ExplicitShader.chud_overlay_blend);
            GenerateExplicitShader(CacheStream, ExplicitShader.bloom_add_alpha1);
            GenerateExplicitShader(CacheStream, ExplicitShader.downsample_4x4_block_bloom_ldr);
            GenerateExplicitShader(CacheStream, ExplicitShader.restore_ldr_hdr_depth);
            GenerateExplicitShader(CacheStream, ExplicitShader.beam_update);
            GenerateExplicitShader(CacheStream, ExplicitShader.decorator_no_wind);
            GenerateExplicitShader(CacheStream, ExplicitShader.decorator_static);
            GenerateExplicitShader(CacheStream, ExplicitShader.decorator_sun);
            GenerateExplicitShader(CacheStream, ExplicitShader.decorator_wavy);
            GenerateExplicitShader(CacheStream, ExplicitShader.final_composite_zoom);
            GenerateExplicitShader(CacheStream, ExplicitShader.final_composite_debug);
            GenerateExplicitShader(CacheStream, ExplicitShader.shadow_apply_point);
            GenerateExplicitShader(CacheStream, ExplicitShader.shadow_apply_bilinear);
            GenerateExplicitShader(CacheStream, ExplicitShader.shadow_apply_fancy);
            GenerateExplicitShader(CacheStream, ExplicitShader.shadow_apply_faster);
            GenerateExplicitShader(CacheStream, ExplicitShader.displacement_motion_blur);
            GenerateExplicitShader(CacheStream, ExplicitShader.decorator_shaded);
            GenerateExplicitShader(CacheStream, ExplicitShader.screenshot_memexport);
            GenerateExplicitShader(CacheStream, ExplicitShader.downsample_4x4_gaussian_bloom_ldr);
            GenerateExplicitShader(CacheStream, ExplicitShader.downsample_4x4_gaussian_bloom);
            GenerateExplicitShader(CacheStream, ExplicitShader.downsample_4x4_block_bloom_new);
            GenerateExplicitShader(CacheStream, ExplicitShader.bloom_curve);
            GenerateExplicitShader(CacheStream, ExplicitShader.custom_gamma_correct);
            GenerateExplicitShader(CacheStream, ExplicitShader.pixel_copy);
            GenerateExplicitShader(CacheStream, ExplicitShader.decorator_edit);
            GenerateExplicitShader(CacheStream, ExplicitShader.hdr_retrieve);
            GenerateExplicitShader(CacheStream, ExplicitShader.smirnov);
            GenerateExplicitShader(CacheStream, ExplicitShader.fxaa);
            GenerateExplicitShader(CacheStream, ExplicitShader.unknown_94);
            GenerateExplicitShader(CacheStream, ExplicitShader.sniper_scope_stencil_pc);
            GenerateExplicitShader(CacheStream, ExplicitShader.ssao);
            GenerateExplicitShader(CacheStream, ExplicitShader.ssao_blur);
            GenerateExplicitShader(CacheStream, ExplicitShader.unknown_98);
            GenerateExplicitShader(CacheStream, ExplicitShader.lightshafts);
            GenerateExplicitShader(CacheStream, ExplicitShader.radial_blur);
            GenerateExplicitShader(CacheStream, ExplicitShader.unknown_101);
            GenerateExplicitShader(CacheStream, ExplicitShader.unknown_102);
            GenerateExplicitShader(CacheStream, ExplicitShader.unknown_103);
            GenerateExplicitShader(CacheStream, ExplicitShader.unknown_104);
            GenerateExplicitShader(CacheStream, ExplicitShader.unknown_105);
            GenerateExplicitShader(CacheStream, ExplicitShader.unknown_106);
            GenerateExplicitShader(CacheStream, ExplicitShader.unknown_107);
            GenerateExplicitShader(CacheStream, ExplicitShader.hud_camera_nightvision);
            GenerateExplicitShader(CacheStream, ExplicitShader.unknown_109);
            sandbox.PortTag($@"", $@"rasterizer\plasma_noise.bitmap");
            sandbox.PortTag($@"", $@"sound\combat_dialogue_constants.sound_dialogue_constants");
            sandbox.PortTag($@"", $@"sound\default.sound_global_propagation");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\assault\assault.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\assault\bomb_armed.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\assault\bomb_detonated.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\assault\bomb_disarmed.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\assault\bomb_dropped.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\assault\bomb_reset.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\assault\bomb_returned.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\assault\bomb_taken.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\capture_the_flag\capture_the_flag.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\capture_the_flag\defense.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\capture_the_flag\flag_captured.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\capture_the_flag\flag_dropped.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\capture_the_flag\flag_recovered.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\capture_the_flag\flag_reset.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\capture_the_flag\flag_stolen.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\capture_the_flag\flag_taken.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\capture_the_flag\offense.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\double_kill.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\extermination.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\hail_to_the_king.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\hells_janitor.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\infection_spree.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\invincible.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\juggernaut_spree.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\killimanjaro.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\killing_frenzy.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\killing_spree.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\killionaire.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\killjoy.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\killpocalypse.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\killtacular.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\killtastrophe.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\killtrocity.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\mmm_brains.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\open_season.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\overkill.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\rampage.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\running_riot.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\sharpshooter.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\shotgun_spree.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\slice_n_dice.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\sniper_spree.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\splatter_spree.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\sword_spree.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\triple_kill.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\unstoppable.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\untouchable.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\vehicular_manslaughter.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\flavor\zombie_killing_spree.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\betrayal.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\betrayed.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\fifteen_mins_remaining.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\five_mins_remaining.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\gained_the_lead.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\game_over.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\one_min_remaining.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\round_over.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\sudden_death.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\suicide.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\teamate_gained.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\ten_points_remaining.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\ten_points_to_win.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\ten_secs_remaining.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\thirty_mins_remaining.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\thirty_secs_remaining.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\twenty_five_points_remaining.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\general\twenty_five_points_to_win.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\infection\infected.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\infection\last_man_standing.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\infection\new_zombie.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\juggernaut\destination_moved.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\juggernaut\juggernaut.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\juggernaut\new_juggernaut.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\king_of_the_hill\hill_contested.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\king_of_the_hill\hill_controlled.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\king_of_the_hill\hill_moved.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\king_of_the_hill\king_of_the_hill.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\misc\perfection.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\oddball\ball_dropped.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\oddball\ball_reset.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\oddball\ball_taken.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\oddball\oddball.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\oddball\play_ball.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\slayer\slayer.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\slayer\target_changed.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\territories\territories.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\territories\territory_captured.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\territories\territory_lost.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\vip\new_vip.sound");
            sandbox.PortTag($@"", $@"sound\dialog\multiplayer_en\vip\vip_killed.sound");
            sandbox.PortTag($@"", $@"sound\game_sfx\multiplayer\comm_fail.sound");
            sandbox.PortTag($@"", $@"sound\game_sfx\multiplayer\comm_loop_mp\comm_loop_mp.sound_looping");
            sandbox.PortTag($@"", $@"sound\game_sfx\multiplayer\countdown_for_respawn.sound");
            sandbox.PortTag($@"", $@"sound\game_sfx\multiplayer\player_respawn.sound");
            sandbox.PortTag($@"", $@"sound\game_sfx\multiplayer\teleporter_activate.sound");
            //sandbox.PortTag($@"porttag sound\game_sfx\multiplayer\transport.sound");
            sandbox.PortTag($@"", $@"sound\game_sfx\ui\binoculars\binocs_in_click.sound");
            sandbox.PortTag($@"", $@"sound\game_sfx\ui\binoculars\binocs_out_click.sound");
            sandbox.PortTag($@"", $@"sound\game_sfx\ui\death_gurgle.sound");
            sandbox.PortTag($@"", $@"sound\game_sfx\ui\flag_fail.sound");
            GenerateTag<SoundEffectTemplate>($@"sound\dsp_effects\sound_effect_templates\controller_0_headset");
            GenerateTag<SoundEffectTemplate>($@"sound\dsp_effects\sound_effect_templates\controller_1_headset");
            GenerateTag<SoundEffectTemplate>($@"sound\dsp_effects\sound_effect_templates\controller_2_headset");
            GenerateTag<SoundEffectTemplate>($@"sound\dsp_effects\sound_effect_templates\controller_3_headset");
            GenerateTag<SoundEffectTemplate>($@"sound\dsp_effects\sound_effect_templates\global_speaker_chorus");
            GenerateTag<SoundEffectTemplate>($@"sound\dsp_effects\sound_effect_templates\mono_distortion");
            sandbox.PortTag($@"", $@"sound\global_fx.sound_effect_collection");
            sandbox.PortTag($@"", $@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping.sound_looping");
            sandbox.PortTag($@"", $@"sound\materials\energy\cortana_melee.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_solid\metal_solid_med.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_solid\metal_solid_small.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_thick\hard_metal_thick_cov_hunter.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_thick\hit_ghost.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_thick\hit_ghost_small.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_thick\vehicle_hit_human.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_thin\cov_weap_melee.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_thin\human_weap_melee.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_thin\metal_thin_cov_small.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_thin\metal_thin_fence.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_thin\metal_thin_gas_can.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_thin\metal_thin_hum_grating_med.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_thin\metal_thin_hum_grating_small.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\metal_thin\metal_thin_hum_railing.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\terrain_concrete\concrete_looping\concrete_looping.sound_looping");
            sandbox.PortTag($@"", $@"sound\materials\hard\terrain_concrete\concrete_melee.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\terrain_ice\ice_large.sound");
            sandbox.PortTag($@"", $@"sound\materials\hard\terrain_ice\ice_looping\ice_looping.sound_looping");
            sandbox.PortTag($@"", $@"sound\materials\hard\terrain_ice\ice_med.sound");
            sandbox.PortTag($@"", $@"sound\materials\havok\tire\tire_hits.sound");
            sandbox.PortTag($@"", $@"sound\materials\soft\cardboard\cardboard_hits_med_actee.sound");
            sandbox.PortTag($@"", $@"sound\materials\soft\cardboard\cardboard_hits_small_actee.sound");
            sandbox.PortTag($@"", $@"sound\materials\soft\organic_flesh\melee_impact.sound");
            sandbox.PortTag($@"", $@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor.sound");
            sandbox.PortTag($@"", $@"sound\materials\soft\soft_organic_plant_bushy_dynamic\soft_organic_plant_bushy_dyn_hits\plant_bushy_dyn_melee.sound");
            sandbox.PortTag($@"", $@"sound\materials\soft\terrain_snow\snow_looping\snow_looping.sound_looping");
            sandbox.PortTag($@"", $@"sound\materials\submerged_default_material\submerged_thud_large.sound");
            sandbox.PortTag($@"", $@"sound\materials\submerged_default_material\submerged_thud_small.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\squish_hits.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_carpet\carpet_hit_med.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_dirt\dirt_med.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_floodflesh\floodflesh_dry_med.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_floodflesh\floodflesh_hit_dry_small.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_floodflesh\floodflesh_hit_small.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_floodflesh\floodflesh_hit_small_wet.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_floodflesh\floodflesh_hits_med.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_floodflesh\floodflesh_hits_wet_med.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_floodflesh\floodflesh_looping\floodflesh_looping.sound_looping");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_floodflesh\floodflesh_wet_looping\floodflesh_wet_looping.sound_looping");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_grass\grass_med.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_grass\grass_small.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_gravel\gravel_looping\gravel_looping.sound_looping");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_gravel\gravel_med.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_gravel\gravel_small.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_mud\mud_looping\mud_looping.sound_looping");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_mud\mud_med.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_mud\mud_small.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_sand\sand_looping\sand_looping.sound_looping");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_sand\sand_med.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_sand\sand_small.sound");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_underbrush\underbrush_looping\underbrush_looping.sound_looping");
            sandbox.PortTag($@"", $@"sound\materials\tough\terrain_underbrush\underbrush_med.sound");
            sandbox.PortTag($@"", $@"sound\sound_classes.sound_classes");
            sandbox.PortTag($@"", $@"sound\sound_mix.sound_mix");
            sandbox.PortTag($@"", $@"sound\weapons\battle_rifle\flashlight.sound");
            sandbox.PortTag($@"", $@"sound\weapons\claymore_grenade\claymore_throw.effect");
            sandbox.PortTag($@"", $@"sound\weapons\firebomb\firebomb_throw.effect");
            sandbox.PortTag($@"", $@"sound\weapons\flag\melee_flag.sound");
            sandbox.PortTag($@"", $@"sound\weapons\frag_grenade\frag_throw.effect");
            sandbox.PortTag($@"", $@"sound\weapons\plasma_grenade\throwgren.effect");
            sandbox.PortTag($@"", $@"ui\dialog.color_table");
            sandbox.PortTag($@"", $@"ui\editor.color_table");
            sandbox.PortTag($@"", $@"ui\halox\common\common_bitmaps\emblems.bitmap");
            sandbox.PortTag($@"", $@"ui\halox\sandbox_ui\object_properties_menu_values.sandbox_text_value_pair_definition");
            sandbox.PortTag($@"", $@"ui\halox\sandbox_ui\strings.multilingual_unicode_string_list");
            sandbox.PortTag($@"", $@"ui\halox\scoreboard\dead_player_ui.bitmap");
            sandbox.PortTag($@"", $@"ui\hud.color_table");

            GenerateTag<SquadTemplate>($@"ai\squad_templates\line_break");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\campaign");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_grunt_solo");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_grunt_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_grunt_3");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_4_grunt");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_grunt_flak");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_grunt_flak_3");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_grunt_turret");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_grunt_turret_undeployed");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\blank");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_captain_solo");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_captain_grunt_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_captain_3_grunt");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_captain_jackal_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_captain_jackal_3");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_captain_brute_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_captain_brute_3");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_captain_engineer_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_4_cov");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_brute_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_brute_3");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_4_brute");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_cap_grunt_eng");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_brute_turret");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jetpack_solo");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jetpack_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jetpack_3");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jetpack_4");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_brute_stealth_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_brute_stealth_4");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_brute_stealth_6");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jackal_solo");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_2_jackal");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jackal_3");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jackal_4");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jackal_carbine");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jackal_carbine_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jackal_carbine_3");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jackal_carbine_4");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jackal_sniper");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jackal_sniper_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jackal_sniper_3");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_jackal_sniper_4");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_2_bodyguards");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_chieftain_hammer");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_chieftain_plasma");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_chieftain_flak");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_1_hunter_flak");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_1_hunter_plasma");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_hunters");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_bugger_pupa_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_bugger_pupa_4");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_bugger_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_bugger_4");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_engineer_free_1");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_engineer_1");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_engineer_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_engineer_4");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\vehicles");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_1_shade");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_1_ghost");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_2_ghost");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_1_chopper");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_wraith");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_wraith_aa");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_1_banshee");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_1_banshee_nobomb");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_2_banshee_nobomb");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_phantom");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_phantom_cheap");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_phantom_engineer");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_warthog");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_scorpion_2");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_camp_scorpion_full");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\survival_mode");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_grunt");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_covenant");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_brute_pack");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_brute_jetpack");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_brute_stealth");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_bugger");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_bugger_day");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_jackal");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_jackal_sniper");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_1_hunter");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_chieftain");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_chieftain_1");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_chieftain_hammer");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_chieftain_plasma");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_chieftain_flak");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_phantom");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_phantom_cheap");
            GenerateTag<SquadTemplate>($@"ai\squad_templates\sq_sur_bonus_round_01");
            h100.PortTag($@"", $@"globals\ai_globals.ai_globals");
            h100.PortTag($@"", $@"globals\default_vision_mode.vision_mode");
            h100.PortTag($@"", $@"globals\game_progression.game_progression");
            h100.PortTag($@"", $@"globals\global_achievements.achievements");
            h100.PortTag($@"", $@"multiplayer\in_game_survival_messages.multilingual_unicode_string_list");

            h3MainMenu.PortTag($@"", $@"ui\ui_shared_globals.user_interface_shared_globals_definition");
            h3MainMenu.PortTag($@"", $@"multiplayer\game_variant_settings\multiplayer_editable_settings.multiplayer_variant_settings_interface_definition");
            h3MainMenu.PortTag($@"", $@"multiplayer\matchmaking_hopper_descriptions.multilingual_unicode_string_list");
            h3MainMenu.PortTag($@"", $@"ui\halox\alert\alert_nonblocking.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\alert\alert_toast.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\alpha_legal\alpha_legal.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\alpha_locked_down\alpha_locked_down.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\alpha_motd\alpha_motd.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\campaign\campaign_loading.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\campaign\campaign_select_difficulty.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\campaign\campaign_select_level.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\campaign\campaign_settings.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\carnage_report\carnage_report.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\common\player_select\carnage_report_player_details.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\common\player_select\player_select.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\dialog\dialog.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\dialog\dialog_four.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\director\observer_camera_list_screen.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\e3\e3_demo.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\game_browser\game_browser.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\game_browser\game_browser_search_criteria.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\game_details\game_details.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\game_options\game_options_screen.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\in_progress\in_progress.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\in_progress\in_progress_mini.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\main_menu\main_menu.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\matchmaking\matchmaking_match_found.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\matchmaking\matchmaking_searching.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\postgame_lobby\postgame_lobby.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\pregame_lobby\advanced_screen\advanced_matchmaking_options.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\pregame_lobby\maximum_party_size\maximum_party_size.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\pregame_lobby\pregame_lobby_campaign.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\pregame_lobby\pregame_lobby_mapeditor.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\pregame_lobby\pregame_lobby_matchmaking.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\pregame_lobby\pregame_lobby_multiplayer.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\pregame_lobby\pregame_lobby_theater.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\pregame_lobby\selection\pregame_selection.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\pregame_lobby\switch_lobby\pregame_switch_lobby.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\spartan_program\spartan_milestone.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\spartan_program\spartan_rank.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\game_campaign\start_menu_game_campaign.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\game_multiplayer\start_menu_game_multiplayer.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\hq\start_menu_headquarters.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\hq_screenshots\start_menu_hq_screenshots.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\hq_screenshots\start_menu_hq_screenshots_option.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\hq_screenshots_viewer\screenshots_file_share_previewer.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\hq_screenshots_viewer\start_menu_hq_screenshots_viewer.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\hq_service_record\start_menu_hq_service_record.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\hq_service_record_file_share\start_menu_hq_service_record_file_share.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\hq_service_record_file_share\start_menu_hq_service_record_file_share_bungie.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\hq_service_record_file_share\start_menu_hq_service_record_file_share_choose_category.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\hq_service_record_file_share\start_menu_hq_service_record_file_share_choose_item.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\hq_service_record_file_share\start_menu_hq_service_record_file_share_item_selected.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\hq_transfers\start_menu_hq_transfers.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\hq_transfers\start_menu_hq_transfers_item_selected.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\settings\start_menu_settings.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\settings_appearance\start_menu_settings_appearance.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\settings_appearance_colors\start_menu_settings_appearance_colors.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\settings_appearance_emblem\start_menu_settings_appearance_emblem.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\settings_appearance_model\start_menu_settings_appearance_model.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\settings_camera\start_menu_settings_camera.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\settings_controls\start_menu_settings_controls.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\settings_controls_button\start_menu_settings_controls_button.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\settings_controls_thumbstick\start_menu_settings_controls_thumbstick.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\settings_display\start_menu_settings_display.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\settings_film_autosave\start_menu_settings_film_autosave.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\panes\settings_voice\start_menu_settings_voice.gui_screen_widget_definition");
            h3MainMenu.PortTag($@"", $@"ui\halox\start_menu\start_menu.gui_screen_widget_definition");

            sandbox.PortTag($@"", $@"ui\halox\alert\alert_ingame_full.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\alert\alert_ingame_split.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\boot_betrayer\boot_betrayer.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\boot_betrayer\boot_betrayer_splitscreen.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\common\player_select\scoreboard_player_select.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\common\player_select\splitscreen_player_select.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\director\observer_camera_list_splitscreen.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\director\popup.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\director\saved_film_control_pad.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\director\saved_film_snippet_screen.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\director\saved_film_take_screenshot.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\in_progress\in_progress_mini_me.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\sandbox_ui\forge_legal.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\sandbox_ui\sandbox_budget_screen.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\sandbox_ui\sandbox_budget_screen_splitscreen.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\sandbox_ui\sandbox_object_creation_menu.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\sandbox_ui\sandbox_object_creation_menu_splitscreen.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\sandbox_ui\sandbox_object_properties_menu.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\sandbox_ui\sandbox_object_properties_menu_splitscreen.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\scoreboard\scoreboard.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\scoreboard\scoreboard_half.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\start_menu\panes\game_editor\change_gametype.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\start_menu\panes\game_editor\start_menu_game_editor.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\start_menu\panes\game_multiplayer\change_team.gui_screen_widget_definition");
            sandbox.PortTag($@"", $@"ui\halox\start_menu\panes\game_saved_film\start_menu_game_saved_films.gui_screen_widget_definition");

            citadel.PortTag($@"", $@"ui\halox\carnage_report\campaign_carnage_report.gui_screen_widget_definition");
            citadel.PortTag($@"", $@"ui\halox\terminals\terminal_screen.gui_screen_widget_definition");

            h3MainMenu.PortTag($@"", $@"ui\main_menu.user_interface_globals_definition");
            sandbox.PortTag($@"", $@"ui\multiplayer.user_interface_globals_definition");
            citadel.PortTag($@"", $@"ui\single_player.user_interface_globals_definition");

            citadel.PortTag($@"", $@"shaders\invalid.shader");

            sandbox.PortTag($@"", $@"ui\chud\animations\backpack_test.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\backpack_unready.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\backpack_warning_flash.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\beam_rifle_meter_left.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\beam_rifle_meter_right.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\carbine_crosshair.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\carbine_crosshair2.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\center_dimming.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\center_hack.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\clockwise.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\counterclockwise.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\ctf_scoreboard.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\dimming.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\equipment_kablam.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\fade_in.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\fade_in_slow.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\flash_test.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\help_text_hack.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\init_wipe_horizontal.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\init_wipe_vertical.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\laser_charge.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\laser_unzoom_level.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\laser_zoom_fade_level.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\laser_zoom_level.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\lock_flash.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\motion_tracker_ping.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\pitch_slide.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\shield_dimming.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\shields_out.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\sniper_slide.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\vip_aura_center.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\vip_aura_pulsate.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\vip_notify.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\vip_notify_text.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\vox1.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\vox2.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\yaw_slide.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\animations\zoom_scope.chud_animation_definition");
            sandbox.PortTag($@"", $@"ui\chud\multiplayer_intro\summary_ctf.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\multiplayer_intro\summary_slayer.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\multiplayer_intro\summary_oddball.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\multiplayer_intro\summary_king.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\multiplayer_intro\summary_editor.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\multiplayer_intro\summary_vip.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\multiplayer_intro\summary_juggernaut.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\multiplayer_intro\summary_territories.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\multiplayer_intro\summary_assault.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\multiplayer_intro\summary_infection.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\assault_rifle.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\battle_rifle.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\beam_rifle.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\brute_shot.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\carbine.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\e_bubbleshield.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\e_flare.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\e_gravlift.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\e_instacover.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\e_jammer.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\e_powerdrain.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\e_regen.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\e_tripmine.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\elite.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\excavator.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\flamethrower.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\fuel_rod_cannon.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\golf_club.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\hammer.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\machinegun_turret.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\magnum.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\missile.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\monitor.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\needler.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\plasma_pistol.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\plasma_rifle.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\plasma_turret.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\rocket.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\scoreboard.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\sentinel_beam.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\shotgun.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\smg.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\sniper_rifle.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\spartan.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\spartan_laser.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\spike_rifle.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\sword.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\t_machinegun.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\t_plasmaturret.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\unarmed.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_banshee.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_chaingun.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_chopper.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_driver.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_gaussturret.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_ghost.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_grinderdriver.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_grinderturret.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_hornet.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_mongoose.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_scorpion.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_scorpionturret.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_wraith.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_wraith_anti_air.chud_definition");
            sandbox.PortTag($@"", $@"ui\chud\v_wraithturret.chud_definition");

            citadel.PortTag($@"", $@"ui\chud\e_autoturret.chud_definition");
            citadel.PortTag($@"", $@"ui\chud\e_invincibility.chud_definition");
            citadel.PortTag($@"", $@"ui\chud\e_invisibility.chud_definition");

            h100.PortTag($@"", $@"ui\chud\automag.chud_definition");
            h100.PortTag($@"", $@"ui\chud\smg_silenced.chud_definition");

            GenerateChudShader(CacheStream, ChudShader.chud_simple, false);
            GenerateChudShader(CacheStream, ChudShader.chud_meter);
            GenerateChudShader(CacheStream, ChudShader.chud_text_simple, false);
            GenerateChudShader(CacheStream, ChudShader.chud_meter_shield, false);
            GenerateChudShader(CacheStream, ChudShader.chud_meter_gradient);
            GenerateChudShader(CacheStream, ChudShader.chud_crosshair);
            GenerateChudShader(CacheStream, ChudShader.chud_directional_damage);
            GenerateChudShader(CacheStream, ChudShader.chud_solid);
            GenerateChudShader(CacheStream, ChudShader.chud_sensor);
            GenerateChudShader(CacheStream, ChudShader.chud_meter_single_color);
            GenerateChudShader(CacheStream, ChudShader.chud_navpoint);
            GenerateChudShader(CacheStream, ChudShader.chud_medal);
            GenerateChudShader(CacheStream, ChudShader.chud_texture_cam);
            GenerateChudShader(CacheStream, ChudShader.chud_cortana_screen);
            GenerateChudShader(CacheStream, ChudShader.chud_cortana_camera);
            GenerateChudShader(CacheStream, ChudShader.chud_cortana_offscreen);
            GenerateChudShader(CacheStream, ChudShader.chud_cortana_screen_final);
            GenerateChudShader(CacheStream, ChudShader.chud_meter_chapter);
            GenerateChudShader(CacheStream, ChudShader.chud_meter_double_gradient);
            GenerateChudShader(CacheStream, ChudShader.chud_meter_radial_gradient);
            GenerateChudShader(CacheStream, ChudShader.chud_turbulence);
            GenerateChudShader(CacheStream, ChudShader.chud_emblem);
            GenerateChudShader(CacheStream, ChudShader.chud_cortana_composite, false);
            GenerateChudShader(CacheStream, ChudShader.chud_directional_damage_apply);
            GenerateChudShader(CacheStream, ChudShader.chud_really_simple);
            GenerateChudShader(CacheStream, ChudShader.chud_meter_gradient_inverse);
            sandbox.PortTag($@"", $@"ui\chud\globals.chud_globals_definition");

            sandbox.PortTag($@"", $@"objects\characters\masterchief\mp_masterchief\fp\fp.mode");
            sandbox.PortTag($@"", $@"objects\characters\masterchief\mp_masterchief\fp_body\fp_body.mode");
            sandbox.PortTag($@"", $@"objects\characters\masterchief\mp_masterchief\mp_masterchief.bipd");
            sandbox.PortTag($@"", $@"objects\characters\elite\mp_elite\fp\fp.mode");
            sandbox.PortTag($@"", $@"objects\characters\elite\mp_elite\fp_body\fp_body.mode");
            sandbox.PortTag($@"", $@"objects\characters\elite\mp_elite\mp_elite.bipd");
            sandbox.PortTag($@"", $@"objects\characters\monitor\monitor_editor.bipd");

            citadel.PortTag($@"", $@"objects\characters\dervish\fp\fp.mode");
            citadel.PortTag($@"", $@"objects\characters\dervish\fp_body\fp_body.mode");
            citadel.PortTag($@"", $@"objects\characters\dervish\dervish.bipd");
            citadel.PortTag($@"", $@"objects\characters\elite\fp_arms\fp_arms.mode");
            citadel.PortTag($@"", $@"objects\characters\elite\fp_body\fp_body.mode");
            citadel.PortTag($@"", $@"objects\characters\elite\elite_sp.bipd");
            citadel.PortTag($@"", $@"objects\characters\masterchief\fp\fp.mode");
            citadel.PortTag($@"", $@"objects\characters\masterchief\fp_body\fp_body.mode");
            citadel.PortTag($@"", $@"objects\characters\masterchief\masterchief.bipd");

            citadel.PortTag($@"", $@"sound\characters\elite\shade_d_enter.sound");
            citadel.PortTag($@"", $@"sound\characters\elite\shade_d_exit.sound");
            citadel.PortTag($@"", $@"sound\characters\masterchief\mc_shade_d_enter.sound");
            citadel.PortTag($@"", $@"sound\characters\masterchief\mc_shade_d_exit.sound");

            GenerateTag<Effect>($@"objects\characters\masterchief\damage_effects\assassination_hit_0");
            GenerateTag<Effect>($@"objects\characters\masterchief\damage_effects\assassination_hit_1");
            GenerateTag<Effect>($@"objects\characters\masterchief\damage_effects\assassination_hit_2");
            GenerateTag<Effect>($@"objects\characters\masterchief\damage_effects\assassination_hit_3");
            GenerateTag<Effect>($@"objects\characters\masterchief\damage_effects\concussive_blast");

            haloOnline.PortTag($@"replace single !audio", $@"objects\characters\masterchief\masterchief.model_animation_graph");
            haloOnline.PortTag($@"replace single !audio", $@"objects\characters\elite\lipsync\lipsync.model_animation_graph");
            haloOnline.PortTag($@"replace single !audio", $@"objects\characters\elite\elite.model_animation_graph");
            haloOnline.PortTag($@"replace single !audio", $@"objects\characters\dervish\dervish.model_animation_graph");

            sandbox.PortTag($@"", $@"objects\ui\editor_gizmo\editor_gizmo.scen");
            sandbox.PortTag($@"", $@"objects\multi\vip\vip_boundary.bloc");
            sandbox.PortTag($@"", $@"objects\weapons\grenade\claymore_grenade\claymore_grenade.proj");
            sandbox.PortTag($@"", $@"objects\weapons\grenade\claymore_grenade\claymore_grenade.eqip");
            sandbox.PortTag($@"", $@"objects\weapons\grenade\firebomb_grenade\projectiles\firebomb_grenade.proj");
            sandbox.PortTag($@"", $@"objects\weapons\grenade\firebomb_grenade\firebomb_grenade.eqip");
            sandbox.PortTag($@"", $@"objects\weapons\grenade\frag_grenade\frag_grenade.proj");
            sandbox.PortTag($@"", $@"objects\weapons\grenade\frag_grenade\frag_grenade.eqip");
            sandbox.PortTag($@"", $@"objects\weapons\grenade\plasma_grenade\plasma_grenade.proj");
            sandbox.PortTag($@"", $@"objects\weapons\grenade\plasma_grenade\plasma_grenade.eqip");
            sandbox.PortTag($@"", $@"objects\weapons\melee\energy_blade\energy_blade.weap");
            sandbox.PortTag($@"", $@"objects\weapons\melee\energy_blade\energy_blade_useless.weap");
            sandbox.PortTag($@"", $@"objects\weapons\melee\gravity_hammer\gravity_hammer.weap");
            sandbox.PortTag($@"", $@"objects\weapons\multiplayer\assault_bomb\assault_bomb.weap");
            sandbox.PortTag($@"", $@"objects\weapons\multiplayer\ball\ball.weap");
            sandbox.PortTag($@"", $@"objects\weapons\multiplayer\flag\flag.weap");
            sandbox.PortTag($@"", $@"objects\weapons\pistol\excavator\excavator.weap");
            sandbox.PortTag($@"", $@"objects\weapons\pistol\magnum\magnum.weap");
            sandbox.PortTag($@"", $@"objects\weapons\pistol\needler\needler.weap");
            sandbox.PortTag($@"", $@"objects\weapons\pistol\plasma_pistol\plasma_pistol.weap");
            sandbox.PortTag($@"", $@"objects\weapons\rifle\assault_rifle\assault_rifle.weap");
            sandbox.PortTag($@"", $@"objects\weapons\rifle\battle_rifle\battle_rifle.weap");
            sandbox.PortTag($@"", $@"objects\weapons\rifle\beam_rifle\beam_rifle.weap");
            sandbox.PortTag($@"", $@"objects\weapons\rifle\covenant_carbine\covenant_carbine.weap");
            sandbox.PortTag($@"", $@"objects\weapons\rifle\plasma_rifle\plasma_rifle.weap");
            sandbox.PortTag($@"", $@"objects\weapons\rifle\shotgun\shotgun.weap");
            sandbox.PortTag($@"", $@"objects\weapons\rifle\smg\smg.weap");
            sandbox.PortTag($@"", $@"objects\weapons\rifle\sniper_rifle\sniper_rifle.weap");
            sandbox.PortTag($@"", $@"objects\weapons\rifle\spike_rifle\spike_rifle.weap");
            sandbox.PortTag($@"", $@"objects\weapons\support_high\flak_cannon\flak_cannon.weap");
            sandbox.PortTag($@"", $@"objects\weapons\support_high\rocket_launcher\rocket_launcher.weap");
            sandbox.PortTag($@"", $@"objects\weapons\support_high\spartan_laser\spartan_laser.weap");
            sandbox.PortTag($@"", $@"objects\weapons\support_low\brute_shot\brute_shot.weap");
            sandbox.PortTag($@"", $@"objects\weapons\support_low\sentinel_gun\sentinel_gun.weap");
            sandbox.PortTag($@"", $@"objects\weapons\turret\flamethrower\flamethrower.weap");
            sandbox.PortTag($@"", $@"objects\weapons\turret\machinegun_turret\machinegun_turret.weap");
            sandbox.PortTag($@"", $@"objects\weapons\turret\plasma_cannon\plasma_cannon.weap");
            sandbox.PortTag($@"", $@"objects\weapons\turret\missile_pod\missile_pod.weap");
            sandbox.PortTag($@"", $@"objects\levels\dlc\shared\forge_ball\forge_ball.weap");

            sandbox.PortTag($@"", $@"objects\vehicles\banshee\banshee.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\brute_chopper\brute_chopper.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\ghost\ghost.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\hornet\hornet.vehicle");
            sandbox.PortTag($@"", $@"objects\levels\dlc\sidewinder\hornet_lite\hornet_lite.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\mongoose\mongoose.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\mauler\anti_infantry\anti_infantry.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\mauler\mauler.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\scorpion\scorpion.vehicle");

            citadel.PortTag($@"", $@"objects\vehicles\shade\shade.vehicle");

            sandbox.PortTag($@"", $@"objects\vehicles\warthog\turrets\chaingun\chaingun.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\warthog\turrets\gauss\gauss.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\warthog\turrets\troop\troop.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\warthog\warthog.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\warthog\warthog_gauss.vehicle");

            sidewinder.PortTag($@"", $@"objects\vehicles\warthog\turrets\chaingun\chaingun_snow.vehicle");
            sidewinder.PortTag($@"", $@"objects\vehicles\warthog\turrets\gauss\gauss_snow.vehicle");
            sidewinder.PortTag($@"", $@"objects\vehicles\warthog\warthog_snow.vehicle");

            sandbox.PortTag($@"", $@"objects\vehicles\wraith\turrets\anti_air\anti_air.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\wraith\turrets\anti_infantry\anti_infantry.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\wraith\turrets\anti_infantry\anti_infantry_anti_air_wraith.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\wraith\turrets\mortar\mortar.vehicle");
            sandbox.PortTag($@"", $@"objects\vehicles\wraith\wraith.vehicle");
            sandbox.PortTag($@"", $@"objects\weapons\turret\machinegun_turret\machinegun_turret.vehicle");
            sandbox.PortTag($@"", $@"objects\weapons\turret\plasma_cannon\plasma_cannon.vehicle");

            voi.PortTag($@"", $@"objects\weapons\turret\missile_pod\missile_pod.vehicle");

            shrine.PortTag($@"", $@"objects\levels\multi\shrine\behemoth\behemoth.vehicle");

            sandbox.PortTag($@"", $@"objects\equipment\bubbleshield_equipment\bubbleshield_equipment.eqip");
            sandbox.PortTag($@"", $@"objects\equipment\gravlift_equipment\gravlift_equipment.eqip");
            sandbox.PortTag($@"", $@"objects\equipment\gravlift_permanent\gravlift_permanent.eqip");
            sandbox.PortTag($@"", $@"objects\equipment\instantcover_equipment\instantcover_equipment_mp.eqip");
            sandbox.PortTag($@"", $@"objects\equipment\jammer_equipment\jammer_equipment.eqip");
            sandbox.PortTag($@"", $@"objects\equipment\powerdrain_equipment\powerdrain_equipment.eqip");
            sandbox.PortTag($@"", $@"objects\equipment\regenerator_equipment\regenerator_equipment.eqip");
            sandbox.PortTag($@"", $@"objects\equipment\superflare_equipment\superflare_equipment.eqip");
            sandbox.PortTag($@"", $@"objects\equipment\tripmine_equipment\tripmine_equipment.eqip");

            citadel.PortTag($@"", $@"objects\equipment\instantcover_equipment\instantcover_equipment.eqip");
            citadel.PortTag($@"", $@"objects\equipment\invincibility_equipment\invincibility_equipment.eqip");
            citadel.PortTag($@"", $@"objects\equipment\invisibility_equipment\invisibility_equipment.eqip");

            halo.PortTag($@"", $@"objects\equipment\autoturret_equipment\autoturret_equipment.eqip");

            sandbox.PortTag($@"", $@"objects\multi\powerups\powerup_blue\powerup_blue.eqip");
            sandbox.PortTag($@"", $@"objects\multi\powerups\powerup_red\powerup_red.eqip");
            sandbox.PortTag($@"", $@"objects\multi\powerups\powerup_yellow\powerup_yellow.eqip");

            h3MainMenu.PortTag($@"", $@"*.scnr");
        }

        public void InitializePortingContext()
        {
            // These need to be defined after the new cache has been generated, otherwise it gets given the wrong cache context

            TagParser = new TagObjectParser(Cache, CacheContext, CacheStream, JSONFileTree.JSONGenerateDonkeyCachePath);
            MapParser = new MapObjectParser(Cache, CacheContext, CacheStream, JSONFileTree.JSONGenerateDonkeyCachePath);
            BlfParser = new BlfObjectParser(Cache, CacheContext, CacheStream, JSONFileTree.JSONGenerateDonkeyCachePath);

            haloOnline = new PortingContext(CacheContext, haloOnlineCache, CacheStream);

            h3MainMenu = new PortingContext(CacheContext, h3MainMenuCache, CacheStream);
            intro = new PortingContext(CacheContext, introCache, CacheStream);
            jungle = new PortingContext(CacheContext, jungleCache, CacheStream);
            crows = new PortingContext(CacheContext, crowsCache, CacheStream);
            outskirts = new PortingContext(CacheContext, outskirtsCache, CacheStream);
            voi = new PortingContext(CacheContext, voiCache, CacheStream);
            floodvoi = new PortingContext(CacheContext, floodvoiCache, CacheStream);
            waste = new PortingContext(CacheContext, wasteCache, CacheStream);
            citadel = new PortingContext(CacheContext, citadelCache, CacheStream);
            highCharity = new PortingContext(CacheContext, highCharityCache, CacheStream);
            halo = new PortingContext(CacheContext, haloCache, CacheStream);
            epilogue = new PortingContext(CacheContext, epilogueCache, CacheStream);

            mythicMainMenu = new PortingContext(CacheContext, mythicMainMenuCache, CacheStream);
            armory = new PortingContext(CacheContext, armoryCache, CacheStream);
            bunkerworld = new PortingContext(CacheContext, bunkerworldCache, CacheStream);
            chill = new PortingContext(CacheContext, chillCache, CacheStream);
            chillout = new PortingContext(CacheContext, chilloutCache, CacheStream);
            construct = new PortingContext(CacheContext, constructCache, CacheStream);
            cyberdyne = new PortingContext(CacheContext, cyberdyneCache, CacheStream);
            deadlock = new PortingContext(CacheContext, deadlockCache, CacheStream);
            descent = new PortingContext(CacheContext, descentCache, CacheStream);
            docks = new PortingContext(CacheContext, docksCache, CacheStream);
            fortress = new PortingContext(CacheContext, fortressCache, CacheStream);
            ghosttown = new PortingContext(CacheContext, ghosttownCache, CacheStream);
            guardian = new PortingContext(CacheContext, guardianCache, CacheStream);
            isolation = new PortingContext(CacheContext, isolationCache, CacheStream);
            lockout = new PortingContext(CacheContext, lockoutCache, CacheStream);
            midship = new PortingContext(CacheContext, midshipCache, CacheStream);
            riverworld = new PortingContext(CacheContext, riverworldCache, CacheStream);
            salvation = new PortingContext(CacheContext, salvationCache, CacheStream);
            sandbox = new PortingContext(CacheContext, sandboxCache, CacheStream);
            shrine = new PortingContext(CacheContext, shrineCache, CacheStream);
            sidewinder = new PortingContext(CacheContext, sidewinderCache, CacheStream);
            snowbound = new PortingContext(CacheContext, snowboundCache, CacheStream);
            spacecamp = new PortingContext(CacheContext, spacecampCache, CacheStream);
            warehouse = new PortingContext(CacheContext, warehouseCache, CacheStream);
            zanzibar = new PortingContext(CacheContext, zanzibarCache, CacheStream);

            odstMainMenu = new PortingContext(CacheContext, odstMainMenuCache, CacheStream);
            h100 = new PortingContext(CacheContext, h100Cache, CacheStream);
            c100 = new PortingContext(CacheContext, c100Cache, CacheStream);
            c200 = new PortingContext(CacheContext, c200Cache, CacheStream);
            l200 = new PortingContext(CacheContext, l200Cache, CacheStream);
            l300 = new PortingContext(CacheContext, l300Cache, CacheStream);
            sc100 = new PortingContext(CacheContext, sc100Cache, CacheStream);
            sc110 = new PortingContext(CacheContext, sc110Cache, CacheStream);
            sc120 = new PortingContext(CacheContext, sc120Cache, CacheStream);
            sc130 = new PortingContext(CacheContext, sc130Cache, CacheStream);
            sc140 = new PortingContext(CacheContext, sc140Cache, CacheStream);
            sc150 = new PortingContext(CacheContext, sc150Cache, CacheStream);
        }

        public void GenerateTag<T>(string tagName) where T : TagStructure
        {
            var tag = CacheContext.TagCache.AllocateTag<T>(tagName);
            var definition = Activator.CreateInstance<T>();
            CacheContext.Serialize(CacheStream, tag, definition);
            CacheContext.SaveTagNames();
        }

        public void DuplicateTag(CachedTag tag, string newName)
        {
            var newTag = CacheContext.TagCache.AllocateTag(tag.Group, newName);
            var defintion = CacheContext.Deserialize(CacheStream, tag);
            CacheContext.Serialize(CacheStream, newTag, defintion);
            CacheContext.SaveTagNames();
        }

        public void RenameTag(CachedTag currentTag, string newName)
        {
            currentTag.Name = newName;
            CacheContext.SaveTagNames();
        }
    }
}
